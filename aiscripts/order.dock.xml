<?xml version="1.0" encoding="utf-8" ?>

<!-- When civilian fleet commander docks, synchronize default orders: -->
<!-- Commander broadcasts updated orders to all subordinates. -->
<!-- Apparently, only the original MTF code works, so I am copying them over here. -->
<!-- If possible, I hope to rewrite the entire logic with my style and stuff, but well. -->
<!--
Note to self:
This script uses $thisship instead of $object, to account for the cases where
Betty docks for the player via Auto-Pilot.
-->
<diff>
    <!-- Changing to the init block so it should be more save-compatible. -->
    <!-- /aiscript/attention[@min='unknown']/actions/set_command[@command='command.dockat'] ; pos=after -->
    <!-- /aiscript/init  -->
    <add sel="/aiscript/init">
        <!-- There are currently two ways of syncing. -->
        <!-- 1. Commander docks and broadcasts (maybe-updated) orders to subordinates (confirming that the TradeRoutine order is doable (assuming no playr intervention)) -->
        <!-- 2. Subordinate docks and obtains (maybe-updated) orders from commander (during usual trading, when the commander probably has not docked yet to execute [1].) -->
        
        <!-- Of course, if this ain't player-owned, we have nothing to discuss. -->
        <do_if value="$thisship.isplayerowned">
            <!-- Stations can't dock at somewhere else, so we do not need to check for stations. -->

            <!-- Ensure the table for fleet numbers exists; useful for when we attempt to find fleet numbers. -->
            <do_if value="not global.$v1024_fleet_number_table?">
                <set_value name="global.$v1024_fleet_number_table" exact="table[]" />
            </do_if>

            <!-- Set up variables. -->
            <set_value name="$commanderObject" exact="$thisship.commander" />
            <set_value name="$civFleet_CmdTagPairs" exact="global.$civFleet_CmdTagPairs" />

            <!-- However, ships may have stations as their commanders. -->
            <!-- Check condition 2 first such that middle-commanders may obtain updated commands first before broadcsating. -->
            <do_if value="$commanderObject == null">
                <!-- No commander, nothing to do. -->
            </do_if>
            <do_elseif value="$commanderObject.isclass.ship">
                <!-- Might be civilian subordinate of a civ-fleet. -->
                <set_value name="$assignmentObj" exact="$thisship.assignment" />
                <set_value name="$minerStatus" exact="@global.$v1024_list_ship_is_mining.{$thisship}" />
                <!-- v3.0 allows resupplier ships to receive trade subordinates; this is not what we are interested in. -->
                <!-- We should have adopted dictionaries in the first place, now we are stuck with bad code that are too old to change. -->
                <!-- Too much work required to change, and others' mods will break during the change. Not good at all. -->
                <do_if value="$thisship.assignment == assignment.assist" comment="We can only check for Assist assignment here.">
                    <!-- Is Assist. -->
                    <!-- 
                        Let's argue a bit.
                        For civ-fleet affected by this mod, they will receive proper default behaviors in the new sync code.
                        For non-civ-fleet members, they will fall back to vanilla behavior and gets assigned the Mimic Commander default behavior.
                        We have previously discovered that changing the default order does not affect the order queue at all;
                        ships will still try to finish their current orders before falling back to default behavior to generate new orders.
                        So, signalling the sync code here preserves correctness.
                        Performance problems and doubts will be put under the rug for simplicity.
                    -->
                    <!-- Sync from commander. -->
                    <!-- Delegate to standardized static config method to ensure save-game compatibility. -->
                    <signal_objects object="player.galaxy" param="global.$v1024_symbols_requestOrderSync_mimicryExtension" param2="$commanderObject" param3="$thisship" />
                </do_if>
                <do_elseif value="($assignmentObj == assignment.trade and $commanderObject.type != shiptype.resupplier) or ($assignmentObj == assignment.mining or @global.$v1024_list_ship_is_mining.{$thisship} == true)" comment="Legacy CivFleet assignment">
                    <signal_objects object="player.galaxy" param="global.$v1024_symbols_requestOrderSync" param2="$commanderObject" param3="$thisship" />
                </do_elseif>
            </do_elseif>
            <do_elseif value="$commanderObject.isclass.station" chance="0" comment="Should already be fixed by EgoSoft themselves.">
                <!-- Also allow station traders/miners to update their warebsakets irregularly. -->
                <set_value name="$assignmentObj" exact="$thisship.assignment" />
                <do_if value="($assignmentObj == assignment.trade) or ($assignmentObj == assignment.mining) or ($assignmentObj == assignment.tradeforbuildstorage)">
                    <!-- Trigger vanilla script to let them help us update the orders. -->
                    <!-- This is much more safer than straight up copying everything over. -->
                    <run_script name="'lib.request.orders'">
                        <param name="object" value="$thisship"/>
                    </run_script>
                </do_if>
            </do_elseif>
            <!-- Check condition 1: Commander-ship -->
            <do_if value="$thisship.subordinates.count and $thisship.defaultorder != null">
                <!-- The original mod specifically mentioned allowing middle-commanders to lead civilian fleets. -->
                <do_all exact="$civFleet_CmdTagPairs.count" counter="$i">
                    <!-- Determine civilian fleet commander -->
                    <do_if value="$thisship.defaultorder.id == $civFleet_CmdTagPairs.{$i}.{1}">
                        <!-- Fleet commander detected. -->
                        <!-- Summon all subordinates, and sync orders. -->
                        <set_value name="$allSubordinates" exact="$thisship.subordinates" />
                        <!-- Noticed that AIScript can utilize this useful do-for-each loop block; rewritten code to use that -->
                        <do_for_each name="$currentSubordinate" in="$allSubordinates">
                            <set_value name="$assignmentObjSubord" exact="$currentSubordinate.assignment" />
                            <do_if value="$currentSubordinate.assignment == assignment.assist">
                                <!-- Delegate to standardized static config method to ensure save-game compatibility. -->
                                <signal_objects object="player.galaxy" param="global.$v1024_symbols_requestOrderSync_mimicryExtension" param2="$thisship" param3="$currentSubordinate" />
                            </do_if>
                            <!-- We no longer support the legacy "assign as trader"/"assign as miner" method -->
                        </do_for_each>
                    </do_if>
                </do_all>
            </do_if>
        </do_if>
    </add>
</diff>
